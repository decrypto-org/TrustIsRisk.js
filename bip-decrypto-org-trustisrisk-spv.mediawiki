<pre>
  BIP: ?
  (Layer: Peer Services)
  Title: SPV extension for Trust is Risk
  Author: Orfeas Stefanos Thyfronitis Litos <o.thyfronitis@ed.ac.uk>
          Christos Porios <chris.porios@gmail.com>
          Dionysis Zindros <dionyziz@gmail.com>
  (Discussions-To: )
  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-trustisrisk
  Status: Draft
  Type: Process
  Created: 2017-07-31
  License: CC0-1.0
  (License-Code: GNU-All-Permissive)
</pre>

==Abstract==

This BIP describes the needed extensions to the communication protocol of full nodes with SPV nodes in order to enable
efficient transfer of relevant [https://github.com/decrypto-org/TrustIsRisk.js Trust is Risk] transactions for the calculation
of indirect trust.

==Copyright==

This BIP is licensed under the Creative Commons CC0 1.0 Universal license.

==Specification==

Direction 1: A new message named tirutxo (similar to getheaders, getblocks and mempool) is sent to the server and the server
responds with a list of all changes that have occurred to the trust graph since the height specified in the message.

Direction 2: The message tirutxo is supplemented with two addresses of interest (source, sink) and the server sends only the
relevant trasactions, that is a subset of the ones in Direction 1. For better privacy, the source and the sink can be two
bloom filters that contain the true source and sink of interest along with other garbage addresses and the server then sends
all the transactions that are relevant for all possible combinations of possible sources and sinks. Concern: this may be too
hard on the server side.

==Motivation==

==Rationale==

==Backwards compatibility==

This BIP does not in any way create backwards compatibility issues (hopefully). Existing SPV nodes can still use Bloom filters
according to [https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki BIP 37] without any need to account for the
extensions proposed in this document.

==See Also==

* [https://github.com/decrypto-org/TrustIsRisk/raw/master/fc17.pdf Trust is Risk paper]
* [https://github.com/decrypto-org/TrustIsRisk.js Trust is Risk implementation]
